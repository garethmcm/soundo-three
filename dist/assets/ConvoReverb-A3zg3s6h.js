import{r,j as e}from"./index-Unzykuk8.js";import{T as f,o as j,k as B,G as l,n as _,_ as T,b as A,p as N,s as L}from"./stop-circle-DqqeZ05H.js";import{s as w,g as y,b as R,d as C,p as D,v as S}from"./VOCAL WITH VERB-DVYifobt.js";class u extends f{constructor(){const s=j(u.getDefaults(),arguments,["url","onload"]);super(s),this.name="Convolver",this._convolver=this.context.createConvolver(),this._buffer=new B(s.url,n=>{this.buffer=n,s.onload()}),this.input=new l({context:this.context}),this.output=new l({context:this.context}),this._buffer.loaded&&(this.buffer=this._buffer),this.normalize=s.normalize,this.input.chain(this._convolver,this.output)}static getDefaults(){return Object.assign(f.getDefaults(),{normalize:!0,onload:_})}load(s){return T(this,void 0,void 0,function*(){this.buffer=yield this._buffer.load(s)})}get buffer(){return this._buffer.length?this._buffer:null}set buffer(s){s&&this._buffer.set(s),this._convolver.buffer&&(this.input.disconnect(),this._convolver.disconnect(),this._convolver=this.context.createConvolver(),this.input.chain(this._convolver,this.output));const n=this._buffer.get();this._convolver.buffer=n||null}get normalize(){return this._convolver.normalize}set normalize(s){this._convolver.normalize=s}dispose(){return super.dispose(),this._buffer.dispose(),this._convolver.disconnect(),this}}const k="/assets/BatteryBenson-DN80KAch.wav",z="/assets/ByronGlacier-B5D-pu1Y.wav",G="/assets/NaumburgBandshell-qA4sFaZS.wav",P="/assets/RedBridge-Bnn2Mom0.wav",h=[{noteAllocation:"C4",fileLocation:w,sampleTitle:"Sunshine"},{noteAllocation:"D4",fileLocation:y,sampleTitle:"Guitar"},{noteAllocation:"E4",fileLocation:R,sampleTitle:"Bass"},{noteAllocation:"F4",fileLocation:C,sampleTitle:"Drums"},{noteAllocation:"G4",fileLocation:D,sampleTitle:"Piano"},{noteAllocation:"A5",fileLocation:S,sampleTitle:"Vocals"}],p=[{id:1,fileLocation:k,presetTitle:"Battery Benson"},{id:2,fileLocation:z,presetTitle:"Byron Glacier"},{id:3,fileLocation:G,presetTitle:"Naumburg Bandshell"},{id:3,fileLocation:P,presetTitle:"Red Bridge"}],M=()=>{const[c,s]=r.useState(!1),n=r.useRef(null),o=r.useRef(null),i=r.useRef(null),a=r.useRef(null);r.useEffect(()=>(n.current=new A(Object.fromEntries(h.map(t=>[t.noteAllocation,t.fileLocation])),{onload:()=>{s(!0)}}),o.current=new u,i.current=new l(.5).toDestination(),a.current=new l(.5).toDestination(),n.current&&o.current&&(n.current.connect(o.current),o.current.connect(i.current),n.current.connect(a.current)),()=>{n.current&&n.current.dispose(),o.current&&o.current.dispose()}),[]);const v=t=>{c&&n.current&&n.current.triggerAttack(t)},m=t=>{n.current&&n.current.triggerRelease(t)},b=t=>{const d=p.find(g=>g.id===t);o.current&&d&&o.current.load(d.fileLocation)},x=t=>{i.current&&a.current&&(i.current.gain.value=t,a.current.gain.value=1-t)};return e.jsxs("div",{children:[e.jsx("h1",{children:"Convolution reverb"}),e.jsx("p",{className:"blurb",children:"This is a reverb which is made out of impulse response samples taken from real acoustic environments. Please pick an environment from the dropdown to hear what the sample sounds like in different places."}),e.jsxs("div",{className:"audioComponentDisplay",children:[e.jsx("div",{className:"playerButtonBox",children:e.jsx("div",{children:h.map(t=>e.jsxs("div",{className:"playerButtonBox",children:[e.jsx("h2",{className:"sampleTitle",children:t.sampleTitle}),e.jsx("div",{onClick:()=>c&&v(t.noteAllocation),children:e.jsx("img",{src:N,alt:"Play",className:"buttons"})}),e.jsx("div",{onClick:()=>c&&m(t.noteAllocation),children:e.jsx("img",{src:L,alt:"Stop",className:"buttons"})})]},t.noteAllocation))})}),e.jsxs("div",{className:"paramDials",children:[e.jsxs("div",{className:"buttonSection",children:[e.jsxs("label",{children:["Reverb Preset: ",e.jsx("br",{}),e.jsxs("select",{onChange:t=>b(parseInt(t.target.value,10)),children:[e.jsx("option",{value:"0",children:"None"}),p.map(t=>e.jsx("option",{value:t.id,children:t.presetTitle},t.id))]})]}),e.jsx("div",{className:"explainer",children:"Select from the reverb samples"})]}),e.jsxs("div",{className:"buttonSection",children:[e.jsxs("label",{children:["Mix: ",e.jsx("br",{}),e.jsx("input",{type:"range",min:"0",max:"1",step:"0.01",defaultValue:"0.5",onChange:t=>x(parseFloat(t.target.value))})]}),e.jsx("div",{className:"explainer",children:"The ratio of affected to unaffected sound"})]})]})]})]})};export{M as default};
