import{r,j as t}from"./index-Unzykuk8.js";import{o as h,W as m,b as f,p as x,s as v}from"./stop-circle-DqqeZ05H.js";import{s as j,g,b,d as D,p as A,v as N}from"./VOCAL WITH VERB-DVYifobt.js";import{E as c}from"./Effect-Dw3aVeLc.js";import"./CrossFade-Bq0s1Naa.js";class l extends c{constructor(){const o=h(l.getDefaults(),arguments,["distortion"]);super(o),this.name="Distortion",this._shaper=new m({context:this.context,length:4096}),this._distortion=o.distortion,this.connectEffect(this._shaper),this.distortion=o.distortion,this.oversample=o.oversample}static getDefaults(){return Object.assign(c.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(o){this._distortion=o;const e=o*100,i=Math.PI/180;this._shaper.setMap(n=>Math.abs(n)<.001?0:(3+e)*n*20*i/(Math.PI+e*Math.abs(n)))}get oversample(){return this._shaper.oversample}set oversample(o){this._shaper.oversample=o}dispose(){return super.dispose(),this._shaper.dispose(),this}}const u=[{noteAllocation:"C4",fileLocation:j,sampleTitle:"Sunshine"},{noteAllocation:"D4",fileLocation:g,sampleTitle:"Guitar"},{noteAllocation:"E4",fileLocation:b,sampleTitle:"Bass"},{noteAllocation:"F4",fileLocation:D,sampleTitle:"Drums"},{noteAllocation:"G4",fileLocation:A,sampleTitle:"Piano"},{noteAllocation:"A5",fileLocation:N,sampleTitle:"Vocals"}],B=()=>{const[a,o]=r.useState(!1),e=r.useRef(null),i=r.useRef(null);r.useEffect(()=>(e.current=new f(Object.fromEntries(u.map(s=>[s.noteAllocation,s.fileLocation])),{onload:()=>{o(!0)}}).toDestination(),e.current.volume.value=.5,i.current=new l({distortion:.5}).toDestination(),e.current&&i.current&&e.current.connect(i.current),()=>{e.current&&e.current.dispose(),i.current&&i.current.dispose()}),[]);const n=s=>{a&&e.current&&e.current.triggerAttack(s)},d=s=>{e.current&&e.current.triggerRelease(s)},p=s=>{i.current&&e.current&&(i.current.distortion=s,e.current.volume.value=1-s)};return t.jsxs("div",{children:[t.jsx("h1",{children:"Distortion"}),t.jsx("p",{className:"blurb",children:"This is when the source is overloaded which adds additional harmonics to the sound."}),t.jsxs("div",{className:"audioComponentDisplay",children:[t.jsx("div",{className:"playerButtonBox",children:t.jsx("div",{children:u.map(s=>t.jsxs("div",{className:"playerButtonBox",children:[t.jsx("h2",{className:"sampleTitle",children:s.sampleTitle}),t.jsx("div",{onClick:()=>a&&n(s.noteAllocation),children:t.jsx("img",{src:x,alt:"Play",className:"buttons"})}),t.jsx("div",{onClick:()=>a&&d(s.noteAllocation),children:t.jsx("img",{src:v,alt:"Stop",className:"buttons"})})]},s.noteAllocation))})}),t.jsx("div",{className:"paramDials",children:t.jsxs("div",{className:"buttonSection",children:[t.jsxs("label",{children:["Mix: ",t.jsx("br",{}),t.jsx("input",{type:"range",min:"0",max:"1",step:"0.01",defaultValue:"0.5",onChange:s=>p(parseFloat(s.target.value))})]}),t.jsx("div",{className:"explainer",children:"Determines amount of distortion sent to sound"})]})})]})]})};export{B as default};
