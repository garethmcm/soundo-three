import{e as a,W as o,T as n,o as h,G as s,S as r,r as c,f as e}from"./stop-circle-DqqeZ05H.js";class p extends a{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new o({context:this.context,mapping:t=>Math.abs(t)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class i extends n{constructor(){const t=h(i.getDefaults(),arguments,["fade"]);super(t),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new p({context:this.context}),this.a=new s({context:this.context,gain:0}),this.b=new s({context:this.context,gain:0}),this.output=new s({context:this.context}),this._internalChannels=[this.a,this.b],this.fade=new r({context:this.context,units:"normalRange",value:t.fade}),c(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",e(this._split,this.a.gain,0),e(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(n.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}export{i as C};
